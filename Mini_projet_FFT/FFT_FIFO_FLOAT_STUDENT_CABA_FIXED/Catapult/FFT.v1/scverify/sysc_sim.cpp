// ----------------------------------------------------------------------------
// SystemC SCVerify Flow -- sysc_sim.cpp
//
//    HLS version: 2022.2_1/1019737 Production Release
//       HLS date: Mon Nov 21 20:05:27 PST 2022
//  Flow Packages: HDL_Tcl 8.0a, SCVerify 10.4
//
//   Generated by: HLS_student@localhost.localdomain
// Generated date: Tue Mar 25 11:37:36 CET 2025
//
// ----------------------------------------------------------------------------
// 
// -------------------------------------
// sysc_sim_wrapper
// Represents a new SC_MODULE having the same interface as the original model FFT
// -------------------------------------
// 
#include "sysc_sim.h"

double __scv_hold_time = 0.0; // default for non-gate simulation is zero


// ---------------------------------------------------------------
// Process: SC_METHOD update_proc
// Static sensitivity: sensitive  << clk << rst << in_real << in_imag << ccs_rtl_SIG_out_real << ccs_rtl_SIG_out_imag << data_valid_source << ccs_rtl_SIG_data_req_source << ccs_rtl_SIG_data_valid_sink << data_req_sink;

void CCS_RTL::sysc_sim_wrapper::update_proc() {
   // none.sc_in field_key=clk:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-486:clk:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-486
   sc_logic t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_486_0; // NPS - LV to hold field
   ccs_rtl_SIG_clk.write(clk.read());
   
   // none.sc_in field_key=rst:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-487:rst:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-487
   sc_logic t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_487_1; // NPS - LV to hold field
   type_to_vector(rst.read(),1,t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_487_1); // read orig port and type convert
   ccs_rtl_SIG_rst.write(t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_487_1); // then write to RTL port
   
   // none.sc_in field_key=in_real:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-488:in_real:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-488
   sc_lv< 23 > t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_488_2; // NPS - LV to hold field
   type_to_vector(in_real.read(),23,t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_488_2); // read orig port and type convert
   ccs_rtl_SIG_in_real.write(t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_488_2); // then write to RTL port
   
   // none.sc_in field_key=in_imag:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-489:in_imag:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-489
   sc_lv< 23 > t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_489_3; // NPS - LV to hold field
   type_to_vector(in_imag.read(),23,t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_489_3); // read orig port and type convert
   ccs_rtl_SIG_in_imag.write(t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_489_3); // then write to RTL port
   
   // none.sc_out field_key=out_real:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-490:out_real:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-490
   ac_fixed<23, 18, true, AC_TRN, AC_WRAP > d_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_490_4;
   vector_to_type(ccs_rtl_SIG_out_real.read(), 23, &d_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_490_4);
   out_real.write(d_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_490_4);
   
   // none.sc_out field_key=out_imag:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-491:out_imag:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-491
   ac_fixed<23, 18, true, AC_TRN, AC_WRAP > d_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_491_5;
   vector_to_type(ccs_rtl_SIG_out_imag.read(), 23, &d_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_491_5);
   out_imag.write(d_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_491_5);
   
   // none.sc_in field_key=data_valid_source:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-492:data_valid_source:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-492
   sc_logic t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_492_6; // NPS - LV to hold field
   type_to_vector(data_valid_source.read(),1,t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_492_6); // read orig port and type convert
   ccs_rtl_SIG_data_valid_source.write(t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_492_6); // then write to RTL port
   
   // none.sc_out field_key=data_req_source:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-493:data_req_source:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-493
   bool d_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_493_7;
   vector_to_type(ccs_rtl_SIG_data_req_source.read(), 1, &d_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_493_7);
   data_req_source.write(d_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_493_7);
   
   // none.sc_out field_key=data_valid_sink:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-494:data_valid_sink:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-494
   bool d_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_494_8;
   vector_to_type(ccs_rtl_SIG_data_valid_sink.read(), 1, &d_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_494_8);
   data_valid_sink.write(d_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_494_8);
   
   // none.sc_in field_key=data_req_sink:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-495:data_req_sink:2a4068c5-b7a3-48b5-8a9a-906911c8e27c-495
   sc_logic t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_495_9; // NPS - LV to hold field
   type_to_vector(data_req_sink.read(),1,t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_495_9); // read orig port and type convert
   ccs_rtl_SIG_data_req_sink.write(t_2a4068c5_b7a3_48b5_8a9a_906911c8e27c_495_9); // then write to RTL port
   
}
